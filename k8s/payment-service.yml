apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-service-app
  labels:
    app: payment-service-app
spec:
  replicas: 1 # одно приложение (можно увеличить)
  selector:
    matchLabels:
      app: payment-service-app
  template:
    metadata:
      labels:
        app: payment-service-app
    spec:
      containers:
        - name: payment-service-app
          image: payment-service:latest # докер образ
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080 # порт внутри Pod’а
          env: # переменные окружения
            - name: SERVER_PORT
              value: "8080"
            - name: SPRING_DATASOURCE_URL
              value: jdbc:postgresql://my-pg-postgresql.db.svc.cluster.local:5432/payment-db
            - name: SPRING_DATASOURCE_USERNAME
              value: postgres
            - name: SPRING_DATASOURCE_PASSWORD
              value: secret
            - name: SPRING_KAFKA_BOOTSTRAP_SERVERS
              value: kafka.kafka.svc.cluster.local:9092
#            - name: SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI
#              value: http://keycloak.keycloak.svc.cluster.local:8080/realms/iprody-lms
---
apiVersion: v1
kind: Service
metadata:
  name: payment-service-app
  labels:
    app: payment-service-app
spec:
  selector:
    app: payment-service-app
  ports:
    - protocol: TCP
      port: 8080 # порт внутри кластера
      targetPort: 8080 # порт контейнера
      nodePort: 30080 # внешний порт (только если type=NodePort)
  type: NodePort # вариант для доступа снаружи (Minikube, Docker Desktop)
